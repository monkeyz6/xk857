(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{454:function(e,_,t){"use strict";t.r(_);var i=t(2),o=Object(i.a)({},(function(){var e=this,_=e._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[e._v("在经过RocketMQ入门实战后，我们学会了如何进行最基本的发送和接收消息，在RocketMQ中对消息生产者有着大量的配置，这里对常见配置进行了汇总，可在项目中按需选择使用。\n")]),e._v(" "),_("p",[e._v("生产者常见核心配置")]),e._v(" "),_("ul",[_("li",[e._v("compressMsgBodyOverHowmuch ：消息超过默认字节4096后进行压缩")]),e._v(" "),_("li",[e._v("retryTimesWhenSendFailed : 失败重发次数")]),e._v(" "),_("li",[e._v("maxMessageSize : 最大消息配置，默认128k")]),e._v(" "),_("li",[e._v("topicQueueNums : 主题下面的队列数量，默认是4")]),e._v(" "),_("li",[e._v("autoCreateTopicEnable : 是否自动创建主题Topic, 开发建议为true，生产要为false")]),e._v(" "),_("li",[e._v("defaultTopicQueueNums : 自动创建服务器不存在的topic，默认创建的队列数")]),e._v(" "),_("li",[e._v("autoCreateSubscriptionGroup: 是否允许 Broker 自动创建订阅组，建议线下开发开启，线上关闭")]),e._v(" "),_("li",[e._v("brokerClusterName : 集群名称")]),e._v(" "),_("li",[e._v("brokerId : 0表示Master主节点 大于0表示从节点")]),e._v(" "),_("li",[e._v("brokerIP1 : Broker服务地址")]),e._v(" "),_("li",[e._v("brokerRole : broker角色 ASYNC_MASTER/ SYNC_MASTER/ SLAVE")]),e._v(" "),_("li",[e._v("deleteWhen : 每天执行删除过期文件的时间，默认每天凌晨4点")]),e._v(" "),_("li",[e._v("flushDiskType ：刷盘策略, 默认为 ASYNC_FLUSH(异步刷盘), 另外是SYNC_FLUSH(同步刷盘)")]),e._v(" "),_("li",[e._v("listenPort ： Broker监听的端口号")]),e._v(" "),_("li",[e._v("mapedFileSizeCommitLog ： 单个conmmitlog文件大小，默认是1GB")]),e._v(" "),_("li",[e._v("mapedFileSizeConsumeQueue：ConsumeQueue每个文件默认存30W条，可以根据项目调整")]),e._v(" "),_("li",[e._v("storePathRootDir : 存储消息以及一些配置信息的根目录 默认为用户的 ${HOME}/store")]),e._v(" "),_("li",[e._v("storePathCommitLog：commitlog存储目录默认为${storePathRootDir}/commitlog")]),e._v(" "),_("li",[e._v("storePathIndex： 消息索引存储路径")]),e._v(" "),_("li",[e._v("syncFlushTimeout : 同步刷盘超时时间")]),e._v(" "),_("li",[e._v("diskMaxUsedSpaceRatio ： 检测可用的磁盘空间大小，超过后会写入报错")])]),e._v(" "),_("h2",{attrs:{id:"消息常见发送状态"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#消息常见发送状态"}},[e._v("#")]),e._v(" 消息常见发送状态")]),e._v(" "),_("ul",[_("li",[e._v("消息发送有同步和异步")])]),e._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"title"}),_("p",[e._v("Broker消息投递状态")]),e._v(" "),_("ul",[_("li",[e._v("FLUSH_DISK_TIMEOUT：没有在规定时间内完成刷盘 (刷盘策略需要为SYNC_FLUSH 才会出这个错误)")]),e._v(" "),_("li",[e._v("FLUSH_SLAVE_TIMEOUT：主从模式下，broker是SYNC_MASTER, 没有在规定时间内完成主从同步")]),e._v(" "),_("li",[e._v("SLAVE_NOT_AVAILABLE：从模式下，broker是SYNC_MASTER, 但是没有找到被配置成Slave的Broker")]),e._v(" "),_("li",[e._v("SEND_OK：发送成功，没有发生上面的三种问题")])])])])}),[],!1,null,null,null);_.default=o.exports}}]);